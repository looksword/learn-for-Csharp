C# 使用json



点击工具 - NuGet包管理器 - 程序包管理控制台，输入下面命令: 
Install-Package Newtonsoft.Json 
即可使用Newtonsoft.Json 包进行json操作 
PM> Install-Package Newtonsoft.Json



//数据结构
public class CNC_data
{
	public string Ip { get; set; }//IP地址
	public string Topic { get; set; }//状态
	public string Time { get; set; }//采集时间
	public string Aut { get; set; }//MEMory
	public string Run { get; set; }//运行状态
	public string Mp { get; set; }//主程序
	public string Sp { get; set; }//子程序
	public string Alarm { get; set; }//警报
	public string Cnt { get; set; }//产品数量
	public List<string> An { get; set; }//警报编号
	public List<string> Am { get; set; }//警报信息
	public string Door { get; set; }//开关门
	public List<string> Tml { get; set; }//刀具最大寿命
	public List<string> Tul { get; set; }//刀具使用寿命
}
List<CNC_data> all_data = new List<CNC_data>();//输出序列
CNC_data temp_data;//单次输出
public int write_times = 0;//写入批次数
public string dateString;//输出时间
/// <summary>
/// 写入json文件
/// </summary>
private void Write_2_json()
{
	//string fp = System.Windows.Forms.Application.StartupPath + "\\config.json";
	//if (!File.Exists("config.json")) // 判断是否已有相同文件 
	//{
	//    FileStream fs1 = new FileStream("config.json", FileMode.Create, FileAccess.ReadWrite);//创建文件
	//    fs1.Close();
	//}
	//string json = File.ReadAllText("config.json");
	if (write_times < 10)
	{
		all_data.Add(temp_data);
		//dynamic jsonObj = Newtonsoft.Json.JsonConvert.DeserializeObject(json);
		//jsonObj["ip"] = txt_host_name.Text.Trim().ToString();
		//output = Newtonsoft.Json.JsonConvert.SerializeObject(jsonObj, Newtonsoft.Json.Formatting.Indented);
		write_times++;
	}
	else
	{
		string json_2 = JsonConvert.SerializeObject(all_data, Formatting.Indented);
		string desktopPath = Environment.GetFolderPath(Environment.SpecialFolder.DesktopDirectory);//桌面的路径
		using (FileStream fs = new FileStream(string.Format("{0}\\test" + dateString + ".json", desktopPath), FileMode.Create))
		{
			using (StreamWriter sw = new StreamWriter(fs))
			{
				sw.WriteLine(json_2);
			}
		}
		//File.WriteAllText("config.json", output);
		write_times = 0;
		all_data.Clear();
	}
}

